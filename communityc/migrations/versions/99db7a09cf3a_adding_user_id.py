"""adding user id

Revision ID: 99db7a09cf3a
Revises: 43dae092d9eb
Create Date: 2024-10-04 03:36:51.224906

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '99db7a09cf3a'
down_revision = '43dae092d9eb'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('booking', schema=None) as batch_op:
        # Step 1: Add the user_id column as nullable
        batch_op.add_column(sa.Column('user_id', sa.Integer(), nullable=True))
    
    # Step 2: Optional - Update existing records with a default user_id
    # Here you can either set a specific user_id or write a script to update 
    # user_ids based on your application logic
    # Example: Set all existing bookings to a default user ID (e.g., 1)
    op.execute("UPDATE booking SET user_id = 1")  # Adjust the user_id as needed

    with op.batch_alter_table('booking', schema=None) as batch_op:
        # Step 3: Alter the column to be NOT NULL
        batch_op.alter_column('user_id', nullable=False)
        # Step 4: Create a foreign key constraint
        batch_op.create_foreign_key('fk_user_id', 'user', ['user_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('booking', schema=None) as batch_op:
        batch_op.drop_constraint('fk_user_id', type_='foreignkey')
        batch_op.drop_column('user_id')

    # ### end Alembic commands ###
